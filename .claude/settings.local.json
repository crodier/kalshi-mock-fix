{
  "permissions": {
    "allow": [
      "WebFetch",
      "Read",
      "Edit",
      "MultiEdit",
      "Glob",
      "Grep",
      "TodoRead",
      "TodoWrite",
      "Task",
      "Bash(ls:*)",
      "Bash(ll:*)",
      "Bash(la:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(egrep:*)",
      "Bash(fgrep:*)",
      "Bash(find:*)",
      "Bash(locate:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(tr:*)",
      "Bash(diff:*)",
      "Bash(cmp:*)",
      "Bash(md5sum:*)",
      "Bash(sha1sum:*)",
      "Bash(sha256sum:*)",
      "Bash(tree:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(realpath:*)",
      "Bash(readlink:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(ln:*)",
      "Bash(touch:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(cd:*)",
      "Bash(pwd:*)",
      "Bash(pushd:*)",
      "Bash(popd:*)",
      "Bash(dirs:*)",
      "Bash(ps:*)",
      "Bash(ps aux:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(jobs:*)",
      "Bash(bg:*)",
      "Bash(fg:*)",
      "Bash(disown:*)",
      "Bash(nohup:*)",
      "Bash(time:*)",
      "Bash(timeout:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(uptime:*)",
      "Bash(who:*)",
      "Bash(w:*)",
      "Bash(id:*)",
      "Bash(whoami:*)",
      "Bash(groups:*)",
      "Bash(uname:*)",
      "Bash(hostname:*)",
      "Bash(date:*)",
      "Bash(cal:*)",
      "Bash(df:*)",
      "Bash(du:*)",
      "Bash(free:*)",
      "Bash(lscpu:*)",
      "Bash(lsblk:*)",
      "Bash(lsusb:*)",
      "Bash(lspci:*)",
      "Bash(mount:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(history:*)",
      "Bash(ping:*)",
      "Bash(wget:*)",
      "Bash(curl:*)",
      "Bash(nc:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(host:*)",
      "Bash(ifconfig:*)",
      "Bash(ip:*)",
      "Bash(tar:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(7z:*)",
      "Bash(git:*)",
      "Bash(mvn:*)",
      "Bash(mvn *)",
      "Bash(maven:*)",
      "Bash(mvnw:*)",
      "Bash(./mvnw:*)",
      "Bash(mvnw *)",
      "Bash(./mvnw *)",
      "Bash(mvn clean)",
      "Bash(mvn compile)",
      "Bash(mvn test)",
      "Bash(mvn package)",
      "Bash(mvn install)",
      "Bash(mvn deploy)",
      "Bash(mvn validate)",
      "Bash(mvn verify)",
      "Bash(mvn site)",
      "Bash(mvn clean compile)",
      "Bash(mvn clean install)",
      "Bash(mvn clean package)",
      "Bash(mvn clean test)",
      "Bash(mvn clean verify)",
      "Bash(mvn clean deploy)",
      "Bash(mvn spring-boot:run)",
      "Bash(mvn spring-boot:start)",
      "Bash(mvn spring-boot:stop)",
      "Bash(mvn spring-boot:repackage)",
      "Bash(mvn spring-boot:build-image)",
      "Bash(mvn spring-boot:build-info)",
      "Bash(mvn spring-boot:help)",
      "Bash(mvn dependency:tree)",
      "Bash(mvn dependency:analyze)",
      "Bash(mvn dependency:resolve)",
      "Bash(mvn dependency:sources)",
      "Bash(mvn dependency:copy-dependencies)",
      "Bash(mvn dependency:list)",
      "Bash(mvn dependency:purge-local-repository)",
      "Bash(mvn help:effective-pom)",
      "Bash(mvn help:effective-settings)",
      "Bash(mvn help:describe)",
      "Bash(mvn help:system)",
      "Bash(mvn help:all-profiles)",
      "Bash(mvn help:active-profiles)",
      "Bash(mvn versions:display-dependency-updates)",
      "Bash(mvn versions:display-plugin-updates)",
      "Bash(mvn versions:display-property-updates)",
      "Bash(mvn versions:update-parent)",
      "Bash(mvn versions:update-properties)",
      "Bash(mvn versions:use-latest-releases)",
      "Bash(mvn versions:use-latest-snapshots)",
      "Bash(mvn versions:use-latest-versions)",
      "Bash(mvn versions:set)",
      "Bash(mvn versions:commit)",
      "Bash(mvn versions:revert)",
      "Bash(mvn archetype:generate)",
      "Bash(mvn archetype:create-from-project)",
      "Bash(mvn archetype:crawl)",
      "Bash(mvn release:prepare)",
      "Bash(mvn release:perform)",
      "Bash(mvn release:rollback)",
      "Bash(mvn release:clean)",
      "Bash(mvn surefire:test)",
      "Bash(mvn failsafe:integration-test)",
      "Bash(mvn failsafe:verify)",
      "Bash(mvn jacoco:prepare-agent)",
      "Bash(mvn jacoco:report)",
      "Bash(mvn sonar:sonar)",
      "Bash(mvn spotbugs:check)",
      "Bash(mvn spotbugs:spotbugs)",
      "Bash(mvn checkstyle:check)",
      "Bash(mvn checkstyle:checkstyle)",
      "Bash(mvn pmd:check)",
      "Bash(mvn pmd:pmd)",
      "Bash(mvn javadoc:javadoc)",
      "Bash(mvn javadoc:jar)",
      "Bash(mvn source:jar)",
      "Bash(mvn war:war)",
      "Bash(mvn war:exploded)",
      "Bash(mvn jar:jar)",
      "Bash(mvn assembly:single)",
      "Bash(mvn assembly:assembly)",
      "Bash(mvn shade:shade)",
      "Bash(mvn exec:java)",
      "Bash(mvn exec:exec)",
      "Bash(mvn tomcat7:run)",
      "Bash(mvn tomcat7:deploy)",
      "Bash(mvn jetty:run)",
      "Bash(mvn cargo:run)",
      "Bash(mvn cargo:deploy)",
      "Bash(mvn docker:build)",
      "Bash(mvn docker:push)",
      "Bash(mvn docker:remove)",
      "Bash(mvn dockerfile:build)",
      "Bash(mvn dockerfile:push)",
      "Bash(mvn jib:build)",
      "Bash(mvn jib:dockerBuild)",
      "Bash(mvn liquibase:update)",
      "Bash(mvn liquibase:rollback)",
      "Bash(mvn liquibase:status)",
      "Bash(mvn liquibase:diff)",
      "Bash(mvn flyway:migrate)",
      "Bash(mvn flyway:clean)",
      "Bash(mvn flyway:info)",
      "Bash(mvn flyway:validate)",
      "Bash(mvn flyway:baseline)",
      "Bash(mvn flyway:repair)",
      "Bash(mvn mybatis-generator:generate)",
      "Bash(mvn querydsl:export)",
      "Bash(mvn aspectj:compile)",
      "Bash(mvn aspectj:test-compile)",
      "Bash(mvn -DskipTests:*)",
      "Bash(mvn -Dmaven.test.skip=true:*)",
      "Bash(mvn -P:*)",
      "Bash(mvn -X:*)",
      "Bash(mvn -e:*)",
      "Bash(mvn -U:*)",
      "Bash(mvn -o:*)",
      "Bash(mvn -q:*)",
      "Bash(mvn -B:*)",
      "Bash(mvn -V:*)",
      "Bash(mvn -v:*)",
      "Bash(mvn --version:*)",
      "Bash(mvn -h:*)",
      "Bash(mvn --help:*)",
      "Bash(mvn -f:*)",
      "Bash(mvn -pl:*)",
      "Bash(mvn -am:*)",
      "Bash(mvn -amd:*)",
      "Bash(mvn -T:*)",
      "Bash(mvn -t:*)",
      "Bash(mvn -gs:*)",
      "Bash(mvn -s:*)",
      "Bash(mvn clean:*)",
      "Bash(mvn compile:*)",
      "Bash(mvn test:*)",
      "Bash(mvn package:*)",
      "Bash(mvn install:*)",
      "Bash(mvn deploy:*)",
      "Bash(mvn spring-boot\\:*)",
      "Bash(mvn dependency\\:*)",
      "Bash(mvn help\\:*)",
      "Bash(mvn versions\\:*)",
      "Bash(mvn archetype\\:*)",
      "Bash(mvn release\\:*)",
      "Bash(mvn surefire\\:*)",
      "Bash(mvn failsafe\\:*)",
      "Bash(mvn jacoco\\:*)",
      "Bash(mvn sonar\\:*)",
      "Bash(mvn spotbugs\\:*)",
      "Bash(mvn checkstyle\\:*)",
      "Bash(mvn pmd\\:*)",
      "Bash(mvn javadoc\\:*)",
      "Bash(mvn source\\:*)",
      "Bash(mvn war\\:*)",
      "Bash(mvn jar\\:*)",
      "Bash(mvn assembly\\:*)",
      "Bash(mvn shade\\:*)",
      "Bash(mvn exec\\:*)",
      "Bash(mvn tomcat7\\:*)",
      "Bash(mvn jetty\\:*)",
      "Bash(mvn cargo\\:*)",
      "Bash(mvn docker\\:*)",
      "Bash(mvn dockerfile\\:*)",
      "Bash(mvn jib\\:*)",
      "Bash(mvn liquibase\\:*)",
      "Bash(mvn flyway\\:*)",
      "Bash(mvn mybatis-generator\\:*)",
      "Bash(mvn querydsl\\:*)",
      "Bash(mvn aspectj\\:*)",
      "Bash(gradle:*)",
      "Bash(gradle *)",
      "Bash(gradlew:*)",
      "Bash(gradlew *)",
      "Bash(./gradlew:*)",
      "Bash(./gradlew *)",
      "Bash(gradle build)",
      "Bash(gradle clean)",
      "Bash(gradle test)",
      "Bash(gradle check)",
      "Bash(gradle assemble)",
      "Bash(gradle jar)",
      "Bash(gradle war)",
      "Bash(gradle bootJar)",
      "Bash(gradle bootWar)",
      "Bash(gradle bootRun)",
      "Bash(gradle bootBuildImage)",
      "Bash(gradle bootRunMainClassName)",
      "Bash(gradle classes)",
      "Bash(gradle testClasses)",
      "Bash(gradle compileJava)",
      "Bash(gradle compileTestJava)",
      "Bash(gradle processResources)",
      "Bash(gradle processTestResources)",
      "Bash(gradle cleanTest)",
      "Bash(gradle dependencies)",
      "Bash(gradle dependencyInsight)",
      "Bash(gradle dependencyManagement)",
      "Bash(gradle buildEnvironment)",
      "Bash(gradle components)",
      "Bash(gradle model)",
      "Bash(gradle projects)",
      "Bash(gradle properties)",
      "Bash(gradle tasks)",
      "Bash(gradle help)",
      "Bash(gradle wrapper)",
      "Bash(gradle init)",
      "Bash(gradle javadoc)",
      "Bash(gradle publishToMavenLocal)",
      "Bash(gradle publish)",
      "Bash(gradle run)",
      "Bash(gradle installDist)",
      "Bash(gradle distZip)",
      "Bash(gradle distTar)",
      "Bash(gradle shadowJar)",
      "Bash(gradle dockerBuild)",
      "Bash(gradle dockerPush)",
      "Bash(gradle dockerTag)",
      "Bash(gradle dockerSave)",
      "Bash(gradle dockerLoad)",
      "Bash(gradle jibDockerBuild)",
      "Bash(gradle jib)",
      "Bash(gradle sonarqube)",
      "Bash(gradle spotbugsMain)",
      "Bash(gradle spotbugsTest)",
      "Bash(gradle checkstyleMain)",
      "Bash(gradle checkstyleTest)",
      "Bash(gradle pmdMain)",
      "Bash(gradle pmdTest)",
      "Bash(gradle jacocoTestReport)",
      "Bash(gradle jacocoTestCoverageVerification)",
      "Bash(gradle flywayMigrate)",
      "Bash(gradle flywayClean)",
      "Bash(gradle flywayInfo)",
      "Bash(gradle flywayValidate)",
      "Bash(gradle flywayBaseline)",
      "Bash(gradle flywayRepair)",
      "Bash(gradle liquibaseUpdate)",
      "Bash(gradle liquibaseRollback)",
      "Bash(gradle liquibaseStatus)",
      "Bash(gradle liquibaseDiff)",
      "Bash(gradle generateQuerydsl)",
      "Bash(gradle generateOpenApiDocs)",
      "Bash(gradle integrationTest)",
      "Bash(gradle functionalTest)",
      "Bash(gradle acceptanceTest)",
      "Bash(gradle performanceTest)",
      "Bash(gradle -PspringProfiles=:*)",
      "Bash(gradle -Dspring.profiles.active=:*)",
      "Bash(gradle --debug:*)",
      "Bash(gradle --info:*)",
      "Bash(gradle --warn:*)",
      "Bash(gradle --quiet:*)",
      "Bash(gradle --stacktrace:*)",
      "Bash(gradle --full-stacktrace:*)",
      "Bash(gradle --scan:*)",
      "Bash(gradle --no-scan:*)",
      "Bash(gradle --parallel:*)",
      "Bash(gradle --no-parallel:*)",
      "Bash(gradle --daemon:*)",
      "Bash(gradle --no-daemon:*)",
      "Bash(gradle --continuous:*)",
      "Bash(gradle -x:*)",
      "Bash(gradle --exclude-task:*)",
      "Bash(gradle --refresh-dependencies:*)",
      "Bash(gradle --offline:*)",
      "Bash(gradle --build-cache:*)",
      "Bash(gradle --no-build-cache:*)",
      "Bash(gradle --console:*)",
      "Bash(gradle --version)",
      "Bash(gradle -v)",
      "Bash(gradle --help)",
      "Bash(gradle -h)",
      "Bash(gradle -p:*)",
      "Bash(gradle --project-dir:*)",
      "Bash(gradle -b:*)",
      "Bash(gradle --build-file:*)",
      "Bash(gradle -c:*)",
      "Bash(gradle --settings-file:*)",
      "Bash(gradle -D:*)",
      "Bash(gradle -P:*)",
      "Bash(gradle -S:*)",
      "Bash(gradle -a:*)",
      "Bash(gradle -m:*)",
      "Bash(gradle --dry-run:*)",
      "Bash(gradle clean build)",
      "Bash(gradle clean test)",
      "Bash(gradle clean bootRun)",
      "Bash(gradle clean bootJar)",
      "Bash(gradle clean assemble)",
      "Bash(gradle build -x test)",
      "Bash(gradle bootJar -x test)",
      "Bash(gradle build --continuous)",
      "Bash(gradle test --continuous)",
      "Bash(gradle bootRun --args=:*)",
      "Bash(gradle bootRun -Dspring.profiles.active=:*)",
      "Bash(gradle bootRun -Dserver.port=:*)",
      "Bash(gradle clean:*)",
      "Bash(gradle build:*)",
      "Bash(gradle test:*)",
      "Bash(gradle check:*)",
      "Bash(gradle assemble:*)",
      "Bash(gradle boot:*)",
      "Bash(gradle dependencies:*)",
      "Bash(gradle tasks:*)",
      "Bash(gradle wrapper:*)",
      "Bash(gradle publish:*)",
      "Bash(gradle docker:*)",
      "Bash(gradle jib:*)",
      "Bash(gradle sonar:*)",
      "Bash(gradle spotbugs:*)",
      "Bash(gradle checkstyle:*)",
      "Bash(gradle pmd:*)",
      "Bash(gradle jacoco:*)",
      "Bash(gradle flyway:*)",
      "Bash(gradle liquibase:*)",
      "Bash(make:*)",
      "Bash(cmake:*)",
      "Bash(ant:*)",
      "Bash(sbt:*)",
      "Bash(lein:*)",
      "Bash(bazel:*)",
      "Bash(buck:*)",
      "Bash(npm:*)",
      "Bash(npm *)",
      "Bash(npm install)",
      "Bash(npm i)",
      "Bash(npm install *)",
      "Bash(npm i *)",
      "Bash(npm ci)",
      "Bash(npm update)",
      "Bash(npm update *)",
      "Bash(npm outdated)",
      "Bash(npm ls)",
      "Bash(npm list)",
      "Bash(npm ll)",
      "Bash(npm la)",
      "Bash(npm dedupe)",
      "Bash(npm ddp)",
      "Bash(npm prune)",
      "Bash(npm audit)",
      "Bash(npm audit fix)",
      "Bash(npm fund)",
      "Bash(npm run)",
      "Bash(npm run *)",
      "Bash(npm start)",
      "Bash(npm stop)",
      "Bash(npm restart)",
      "Bash(npm test)",
      "Bash(npm run test)",
      "Bash(npm run test:*)",
      "Bash(npm run dev)",
      "Bash(npm run development)",
      "Bash(npm run prod)",
      "Bash(npm run production)",
      "Bash(npm run build)",
      "Bash(npm run build:*)",
      "Bash(npm run watch)",
      "Bash(npm run watch:*)",
      "Bash(npm run serve)",
      "Bash(npm run server)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(npm run format)",
      "Bash(npm run prettier)",
      "Bash(npm run eslint)",
      "Bash(npm run tslint)",
      "Bash(npm run stylelint)",
      "Bash(npm run analyze)",
      "Bash(npm run bundle)",
      "Bash(npm run compile)",
      "Bash(npm run transpile)",
      "Bash(npm run prebuild)",
      "Bash(npm run postbuild)",
      "Bash(npm run pretest)",
      "Bash(npm run posttest)",
      "Bash(npm run prepublish)",
      "Bash(npm run prepare)",
      "Bash(npm run prepublishOnly)",
      "Bash(npm run prepack)",
      "Bash(npm run postpack)",
      "Bash(npm run e2e)",
      "Bash(npm run e2e:*)",
      "Bash(npm run unit)",
      "Bash(npm run unit:*)",
      "Bash(npm run integration)",
      "Bash(npm run integration:*)",
      "Bash(npm run coverage)",
      "Bash(npm run test:coverage)",
      "Bash(npm run test:watch)",
      "Bash(npm run test:debug)",
      "Bash(npm run storybook)",
      "Bash(npm run build-storybook)",
      "Bash(npm run chromatic)",
      "Bash(npm run cypress)",
      "Bash(npm run cypress:*)",
      "Bash(npm run playwright)",
      "Bash(npm run playwright:*)",
      "Bash(npm run jest)",
      "Bash(npm run jest:*)",
      "Bash(npm run mocha)",
      "Bash(npm run mocha:*)",
      "Bash(npm run karma)",
      "Bash(npm run karma:*)",
      "Bash(npm run jasmine)",
      "Bash(npm run ava)",
      "Bash(npm run tap)",
      "Bash(npm run vitest)",
      "Bash(npm run vitest:*)",
      "Bash(npm run webpack)",
      "Bash(npm run webpack:*)",
      "Bash(npm run webpack-dev-server)",
      "Bash(npm run rollup)",
      "Bash(npm run parcel)",
      "Bash(npm run vite)",
      "Bash(npm run vite:*)",
      "Bash(npm run esbuild)",
      "Bash(npm run snowpack)",
      "Bash(npm run tsc)",
      "Bash(npm run typecheck)",
      "Bash(npm run type-check)",
      "Bash(npm run babel)",
      "Bash(npm run gulp)",
      "Bash(npm run grunt)",
      "Bash(npm run brunch)",
      "Bash(npm run deploy)",
      "Bash(npm run deploy:*)",
      "Bash(npm run release)",
      "Bash(npm run release:*)",
      "Bash(npm run publish)",
      "Bash(npm run ship)",
      "Bash(npm run docker)",
      "Bash(npm run docker:*)",
      "Bash(npm run compose)",
      "Bash(npm run compose:*)",
      "Bash(npm run k8s)",
      "Bash(npm run kubectl)",
      "Bash(npm run helm)",
      "Bash(npm run terraform)",
      "Bash(npm run cdk)",
      "Bash(npm run sam)",
      "Bash(npm run serverless)",
      "Bash(npm run sls)",
      "Bash(npm run migrate)",
      "Bash(npm run migrate:*)",
      "Bash(npm run seed)",
      "Bash(npm run seed:*)",
      "Bash(npm run db:*)",
      "Bash(npm run prisma:*)",
      "Bash(npm run typeorm:*)",
      "Bash(npm run sequelize:*)",
      "Bash(npm run knex:*)",
      "Bash(npm run docs)",
      "Bash(npm run docs:*)",
      "Bash(npm run typedoc)",
      "Bash(npm run jsdoc)",
      "Bash(npm run docgen)",
      "Bash(npm run api-docs)",
      "Bash(npm run swagger)",
      "Bash(npm run openapi)",
      "Bash(npm run graphql:*)",
      "Bash(npm run codegen)",
      "Bash(npm run generate)",
      "Bash(npm run generate:*)",
      "Bash(npm run scaffold)",
      "Bash(npm run create)",
      "Bash(npm run init)",
      "Bash(npm cache clean)",
      "Bash(npm cache clean --force)",
      "Bash(npm cache verify)",
      "Bash(npm config)",
      "Bash(npm config *)",
      "Bash(npm get)",
      "Bash(npm set)",
      "Bash(npm version)",
      "Bash(npm version *)",
      "Bash(npm view)",
      "Bash(npm view *)",
      "Bash(npm info)",
      "Bash(npm info *)",
      "Bash(npm search)",
      "Bash(npm search *)",
      "Bash(npm repo)",
      "Bash(npm repo *)",
      "Bash(npm docs)",
      "Bash(npm docs *)",
      "Bash(npm help)",
      "Bash(npm help *)",
      "Bash(npm root)",
      "Bash(npm bin)",
      "Bash(npm prefix)",
      "Bash(npm explore)",
      "Bash(npm explore *)",
      "Bash(npm link)",
      "Bash(npm link *)",
      "Bash(npm exec)",
      "Bash(npm exec *)",
      "Bash(npm create)",
      "Bash(npm create *)",
      "Bash(npm init)",
      "Bash(npm init *)",
      "Bash(npm --version)",
      "Bash(npm -v)",
      "Bash(npm completion)",
      "Bash(npm doctor)",
      "Bash(npm ping)",
      "Bash(npm install --save)",
      "Bash(npm install --save-dev)",
      "Bash(npm install --save-optional)",
      "Bash(npm install --save-exact)",
      "Bash(npm install --global)",
      "Bash(npm install -g)",
      "Bash(npm install --production)",
      "Bash(npm install --no-save)",
      "Bash(npm install --dry-run)",
      "Bash(npm install --force)",
      "Bash(npm install --legacy-peer-deps)",
      "Bash(npm install --strict-peer-deps)",
      "Bash(npm install --no-audit)",
      "Bash(npm install --no-bin-links)",
      "Bash(npm install --no-fund)",
      "Bash(npm install --no-optional)",
      "Bash(npm install --no-shrinkwrap)",
      "Bash(npm install --prefer-offline)",
      "Bash(npm install --prefer-online)",
      "Bash(npm install --offline)",
      "Bash(npm run -- *)",
      "Bash(npm run-script)",
      "Bash(npm run-script *)",
      "Bash(npm rebuild)",
      "Bash(npm rebuild *)",
      "Bash(npm rb)",
      "Bash(npx:*)",
      "Bash(npx *)",
      "Bash(npx create-react-app)",
      "Bash(npx create-react-app *)",
      "Bash(npx create-next-app)",
      "Bash(npx create-next-app *)",
      "Bash(npx create-vue)",
      "Bash(npx create-vue *)",
      "Bash(npx create-vite)",
      "Bash(npx create-vite *)",
      "Bash(npx create-remix)",
      "Bash(npx create-remix *)",
      "Bash(npx create-gatsby)",
      "Bash(npx create-gatsby *)",
      "Bash(npx create-strapi-app)",
      "Bash(npx create-strapi-app *)",
      "Bash(npx create-keystone-app)",
      "Bash(npx create-keystone-app *)",
      "Bash(npx degit)",
      "Bash(npx degit *)",
      "Bash(npx prisma)",
      "Bash(npx prisma *)",
      "Bash(npx typeorm)",
      "Bash(npx typeorm *)",
      "Bash(npx sequelize)",
      "Bash(npx sequelize *)",
      "Bash(npx knex)",
      "Bash(npx knex *)",
      "Bash(npx nodemon)",
      "Bash(npx nodemon *)",
      "Bash(npx ts-node)",
      "Bash(npx ts-node *)",
      "Bash(npx tsx)",
      "Bash(npx tsx *)",
      "Bash(npx eslint)",
      "Bash(npx eslint *)",
      "Bash(npx prettier)",
      "Bash(npx prettier *)",
      "Bash(npx stylelint)",
      "Bash(npx stylelint *)",
      "Bash(npx webpack)",
      "Bash(npx webpack *)",
      "Bash(npx webpack-cli)",
      "Bash(npx webpack-cli *)",
      "Bash(npx webpack-dev-server)",
      "Bash(npx webpack-dev-server *)",
      "Bash(npx vite)",
      "Bash(npx vite *)",
      "Bash(npx rollup)",
      "Bash(npx rollup *)",
      "Bash(npx parcel)",
      "Bash(npx parcel *)",
      "Bash(npx esbuild)",
      "Bash(npx esbuild *)",
      "Bash(npx tsc)",
      "Bash(npx tsc *)",
      "Bash(npx babel)",
      "Bash(npx babel *)",
      "Bash(npx jest)",
      "Bash(npx jest *)",
      "Bash(npx mocha)",
      "Bash(npx mocha *)",
      "Bash(npx vitest)",
      "Bash(npx vitest *)",
      "Bash(npx cypress)",
      "Bash(npx cypress *)",
      "Bash(npx playwright)",
      "Bash(npx playwright *)",
      "Bash(npx storybook)",
      "Bash(npx storybook *)",
      "Bash(npx http-server)",
      "Bash(npx http-server *)",
      "Bash(npx serve)",
      "Bash(npx serve *)",
      "Bash(npx json-server)",
      "Bash(npx json-server *)",
      "Bash(npx concurrently)",
      "Bash(npx concurrently *)",
      "Bash(npx wait-on)",
      "Bash(npx wait-on *)",
      "Bash(npx cross-env)",
      "Bash(npx cross-env *)",
      "Bash(npx dotenv)",
      "Bash(npx dotenv *)",
      "Bash(npx husky)",
      "Bash(npx husky *)",
      "Bash(npx lint-staged)",
      "Bash(npx lint-staged *)",
      "Bash(npx commitizen)",
      "Bash(npx commitizen *)",
      "Bash(npx semantic-release)",
      "Bash(npx semantic-release *)",
      "Bash(npx standard-version)",
      "Bash(npx standard-version *)",
      "Bash(npx lerna)",
      "Bash(npx lerna *)",
      "Bash(npx nx)",
      "Bash(npx nx *)",
      "Bash(npx turbo)",
      "Bash(npx turbo *)",
      "Bash(npx changeset)",
      "Bash(npx changeset *)",
      "Bash(npx patch-package)",
      "Bash(npx patch-package *)",
      "Bash(npx npm-check-updates)",
      "Bash(npx npm-check-updates *)",
      "Bash(npx ncu)",
      "Bash(npx ncu *)",
      "Bash(npx depcheck)",
      "Bash(npx depcheck *)",
      "Bash(npx madge)",
      "Bash(npx madge *)",
      "Bash(npx size-limit)",
      "Bash(npx size-limit *)",
      "Bash(npx source-map-explorer)",
      "Bash(npx source-map-explorer *)",
      "Bash(npx bundle-analyzer)",
      "Bash(npx bundle-analyzer *)",
      "Bash(npx lighthouse)",
      "Bash(npx lighthouse *)",
      "Bash(npx ngrok)",
      "Bash(npx ngrok *)",
      "Bash(npx localtunnel)",
      "Bash(npx localtunnel *)",
      "Bash(vite:*)",
      "Bash(vite *)",
      "Bash(vite)",
      "Bash(vite dev)",
      "Bash(vite build)",
      "Bash(vite preview)",
      "Bash(vite optimize)",
      "Bash(vite serve)",
      "Bash(vite --help)",
      "Bash(vite --version)",
      "Bash(vite -v)",
      "Bash(vite --debug)",
      "Bash(vite --mode *)",
      "Bash(vite --host)",
      "Bash(vite --port *)",
      "Bash(vite --https)",
      "Bash(vite --open)",
      "Bash(vite --cors)",
      "Bash(vite --strictPort)",
      "Bash(vite --force)",
      "Bash(vite build --mode *)",
      "Bash(vite build --base *)",
      "Bash(vite build --outDir *)",
      "Bash(vite build --assetsDir *)",
      "Bash(vite build --assetsInlineLimit *)",
      "Bash(vite build --ssr)",
      "Bash(vite build --sourcemap)",
      "Bash(vite build --minify)",
      "Bash(vite build --target *)",
      "Bash(vite build --manifest)",
      "Bash(vite build --ssrManifest)",
      "Bash(vite build --emptyOutDir)",
      "Bash(vite build --watch)",
      "Bash(vite build --mode production)",
      "Bash(vite build --mode development)",
      "Bash(vite build --mode staging)",
      "Bash(vite preview --host)",
      "Bash(vite preview --port *)",
      "Bash(vite preview --strictPort)",
      "Bash(vite preview --https)",
      "Bash(vite preview --open)",
      "Bash(vite preview --outDir *)",
      "Bash(node:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(bun:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(pipenv:*)",
      "Bash(poetry:*)",
      "Bash(virtualenv:*)",
      "Bash(venv:*)",
      "Bash(conda:*)",
      "Bash(java:*)",
      "Bash(javac:*)",
      "Bash(jar:*)",
      "Bash(javap:*)",
      "Bash(jps:*)",
      "Bash(jstack:*)",
      "Bash(jmap:*)",
      "Bash(ruby:*)",
      "Bash(gem:*)",
      "Bash(bundle:*)",
      "Bash(bundler:*)",
      "Bash(php:*)",
      "Bash(composer:*)",
      "Bash(go:*)",
      "Bash(rust:*)",
      "Bash(cargo:*)",
      "Bash(rustc:*)",
      "Bash(scala:*)",
      "Bash(sbt:*)",
      "Bash(dotnet:*)",
      "Bash(clang:*)",
      "Bash(gcc:*)",
      "Bash(g++:*)",
      "Bash(cc:*)",
      "Bash(ld:*)",
      "Bash(nm:*)",
      "Bash(objdump:*)",
      "Bash(strip:*)",
      "Bash(gdb:*)",
      "Bash(lldb:*)",
      "Bash(valgrind:*)",
      "Bash(vim:*)",
      "Bash(vi:*)",
      "Bash(nano:*)",
      "Bash(emacs:*)",
      "Bash(code:*)",
      "Bash(subl:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(mysql:*)",
      "Bash(psql:*)",
      "Bash(sqlite3:*)",
      "Bash(mongo:*)",
      "Bash(mongosh:*)",
      "Bash(redis-cli:*)",
      "Bash(brew list:*)",
      "Bash(brew info:*)",
      "Bash(brew search:*)",
      "Bash(apt list:*)",
      "Bash(apt search:*)",
      "Bash(apt show:*)",
      "Bash(yum list:*)",
      "Bash(yum search:*)",
      "Bash(yum info:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(sleep:*)",
      "Bash(watch:*)",
      "Bash(screen:*)",
      "Bash(tmux:*)",
      "Bash(xargs:*)",
      "Bash(parallel:*)",
      "Bash(tee:*)",
      "Bash(true)",
      "Bash(false)",
      "Bash(test:*)",
      "Bash([:*)",
      "Bash(alias:*)",
      "Bash(unalias:*)",
      "Bash(type:*)",
      "Bash(command:*)",
      "Bash(builtin:*)",
      "Bash(hash:*)",
      "Bash(help:*)",
      "Bash(man:*)",
      "Bash(info:*)",
      "Bash(apropos:*)",
      "Bash(whatis:*)",
      "Bash(*:*>*.log*)",
      "Bash(*:*>>*.log*)",
      "Bash(*:*2>&1*)",
      "Bash(*:*&>*)",
      "Bash(*:*|*)",
      "Bash(*:*&)",
      "Bash(*:*&&*)",
      "Bash(*:*||*)",
      "Bash(*:*;*)",
      "Bash(serve:*)",
      "Bash(http-server:*)",
      "Bash(live-server:*)",
      "Bash(json-server:*)",
      "Bash(webpack:*)",
      "Bash(webpack-dev-server:*)",
      "Bash(parcel:*)",
      "Bash(vite:*)",
      "Bash(rollup:*)",
      "Bash(esbuild:*)",
      "Bash(tsc:*)",
      "Bash(ts-node:*)",
      "Bash(tsx:*)",
      "Bash(babel:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(jest:*)",
      "Bash(mocha:*)",
      "Bash(vitest:*)",
      "Bash(cypress:*)",
      "Bash(playwright:*)",
      "Bash(lsof:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(pgrep:*)",
      "Bash(pidof:*)",
      "Bash(ngrok:*)",
      "Bash(localtunnel:*)",
      "Bash(postman:*)",
      "Bash(insomnia:*)",
      "Bash(jenkins:*)",
      "Bash(travis:*)",
      "Bash(circleci:*)",
      "Bash(github:*)",
      "Bash(gh:*)",
      "Bash(gitlab:*)",
      "Bash(kubectl:*)",
      "Bash(minikube:*)",
      "Bash(helm:*)",
      "Bash(terraform:*)",
      "Bash(terragrunt:*)",
      "Bash(aws:*)",
      "Bash(sam:*)",
      "Bash(amplify:*)",
      "Bash(gcloud:*)",
      "Bash(az:*)",
      "Bash(ibmcloud:*)",
      "Bash(oci:*)",
      "Bash(pm2:*)",
      "Bash(forever:*)",
      "Bash(nodemon:*)",
      "Bash(supervisor:*)",
      "Bash(systemctl status:*)",
      "Bash(systemctl list:*)",
      "Bash(service * status:*)",
      "Bash(journalctl:*)",
      "Bash(ab:*)",
      "Bash(siege:*)",
      "Bash(wrk:*)",
      "Bash(jmeter:*)",
      "Bash(gatling:*)",
      "Bash(javadoc:*)",
      "Bash(jsdoc:*)",
      "Bash(typedoc:*)",
      "Bash(sphinx:*)",
      "Bash(mkdocs:*)",
      "Bash(rubocop:*)",
      "Bash(pylint:*)",
      "Bash(flake8:*)",
      "Bash(black:*)",
      "Bash(gofmt:*)",
      "Bash(rustfmt:*)",
      "Bash(clang-format:*)",
      "Bash(bash:*)",
      "Bash(sh:*)",
      "Bash(zsh:*)",
      "Bash(source:*)",
      "Bash(.:*)",
      "Bash(export:*)",
      "Bash(unset:*)",
      "Bash(set:*)",
      "Bash(shopt:*)",
      "Bash(ulimit:*)",
      "Bash(umask:*)",
      "Bash(nvm:*)",
      "Bash(rvm:*)",
      "Bash(rbenv:*)",
      "Bash(pyenv:*)",
      "Bash(jenv:*)",
      "Bash(sdkman:*)",
      "Bash(asdf:*)",
      "Bash(openssl:*)",
      "Bash(base64:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(xmllint:*)",
      "Bash(xpath:*)",
      "Bash(bc:*)",
      "Bash(dc:*)",
      "Bash(expr:*)",
      "Bash(seq:*)",
      "Bash(shuf:*)",
      "Bash(factor:*)",
      "Bash(yes:*)",
      "Bash(nl:*)",
      "Bash(paste:*)",
      "Bash(join:*)",
      "Bash(comm:*)",
      "Bash(expand:*)",
      "Bash(unexpand:*)",
      "Bash(fold:*)",
      "Bash(fmt:*)",
      "Bash(pr:*)",
      "Bash(column:*)",
      "Bash(colrm:*)",
      "Bash(rev:*)",
      "Bash(tac:*)",
      "Bash(PGPASSWORD=kalshi_dev_password psql -h localhost -U kalshi -d kalshi_mock -c \"SELECT ticker, title, status FROM markets;\")",
      "Bash(mvn clean:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker run:*)",
      "Bash(docker logs:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(mvn:*)",
      "Bash(docker exec:*)",
      "Bash(PGPASSWORD=kalshi123 psql -h localhost -U kalshi -d kalshi -c \"\\d markets\")",
      "Bash(cat:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)"
    ],
    "deny": [
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(shred:*)",
      "Bash(truncate:*)",
      "Bash(dd:*)",
      "Bash(wipe:*)",
      "Bash(mkfs:*)",
      "Bash(format:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(gparted:*)",
      "Bash(cfdisk:*)",
      "Bash(sfdisk:*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(doas:*)",
      "Bash(runuser:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(halt:*)",
      "Bash(poweroff:*)",
      "Bash(init:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(rc-service:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(usermod:*)",
      "Bash(userdel:*)",
      "Bash(groupdel:*)",
      "Bash(passwd:*)",
      "Bash(kill -9:*)",
      "Bash(kill -KILL:*)",
      "Bash(killall:*)",
      "Bash(pkill -9:*)",
      "Bash(pkill -KILL:*)",
      "Bash(killall5:*)",
      "Bash(docker system prune:*)",
      "Bash(docker volume rm:*)",
      "Bash(docker volume prune:*)",
      "Bash(docker image prune:*)",
      "Bash(docker container prune:*)",
      "Bash(docker network prune:*)",
      "Bash(docker rmi:*)",
      "Bash(docker rm:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose restart:*)",
      "Bash(docker-compose stop:*)",
      "Bash(docker-compose start:*)",
      "Bash(docker-compose up -d:*)",
      "Bash(mvn spring-boot:run:*)",
      "Bash(./mvnw spring-boot:run:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(java -jar:*)",
      "Bash(npm run dev:*)",
      "Bash(npm start:*)",
      "Bash(yarn dev:*)",
      "Bash(yarn start:*)",
      "Bash(git reset --hard:*)",
      "Bash(git clean -fd:*)",
      "Bash(git clean -f:*)",
      "Bash(git clean -d:*)",
      "Bash(git branch -D:*)",
      "Bash(git tag -d:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git reflog expire:*)",
      "Bash(git gc --prune:*)",
      "Bash(npm uninstall:*)",
      "Bash(yarn remove:*)",
      "Bash(pip uninstall:*)",
      "Bash(apt remove:*)",
      "Bash(apt purge:*)",
      "Bash(apt autoremove:*)",
      "Bash(yum remove:*)",
      "Bash(yum erase:*)",
      "Bash(brew uninstall:*)",
      "Bash(brew remove:*)",
      "Bash(conda remove:*)",
      "Bash(conda uninstall:*)",
      "Bash(find * -delete:*)",
      "Bash(find * -exec rm:*)",
      "Bash(find * -exec rmdir:*)",
      "Bash(nc -l:*)",
      "Bash(netcat -l:*)",
      "Bash(ncat -l:*)",
      "Bash(socat:*)",
      "Bash(tar -x * --overwrite:*)",
      "Bash(unzip -o:*)",
      "Bash(7z x -y:*)",
      "Bash(crontab -r:*)",
      "Bash(at -r:*)",
      "Bash(*:*>*/dev/*)",
      "Bash(*:*>/etc/*)",
      "Bash(*:*>/boot/*)",
      "Bash(*:*>/sys/*)",
      "Bash(*:*>/proc/*)",
      "Bash(*:*>*/bin/*)",
      "Bash(*:*>*/sbin/*)",
      "Bash(*:*>*/lib/*)",
      "Bash(*:*>*/lib64/*)",
      "Bash(*:*>*/usr/bin/*)",
      "Bash(*:*>*/usr/sbin/*)",
      "Bash(*:*>*/usr/lib/*)",
      "Bash(*:*>*/var/lib/*)",
      "Bash(apt dist-upgrade:*)",
      "Bash(apt full-upgrade:*)",
      "Bash(yum update -y:*)",
      "Bash(brew upgrade --force:*)",
      "Bash(iptables:*)",
      "Bash(ufw:*)",
      "Bash(firewall-cmd:*)",
      "Bash(nft:*)",
      "Bash(systemctl enable:*)",
      "Bash(systemctl disable:*)",
      "Bash(systemctl mask:*)",
      "Bash(systemctl unmask:*)",
      "Bash(systemctl daemon-reload:*)",
      "Bash(update-rc.d:*)",
      "Bash(chkconfig:*)",
      "Bash(insserv:*)",
      "Bash(modprobe:*)",
      "Bash(rmmod:*)",
      "Bash(insmod:*)",
      "Bash(lsmod:*)",
      "Bash(depmod:*)",
      "Bash(sysctl -w:*)",
      "Bash(mount -o rw:*)",
      "Bash(umount:*)",
      "Bash(mount --bind:*)",
      "Bash(setenforce:*)",
      "Bash(getenforce:*)",
      "Bash(aa-disable:*)",
      "Bash(aa-complain:*)"
    ]
  }
}